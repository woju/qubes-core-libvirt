From 918beb2862555512f0481f7e4ca83c8052d07d3b Mon Sep 17 00:00:00 2001
From: Wojtek Porczyk <woju@invisiblethingslab.com>
Date: Thu, 14 Sep 2017 02:29:29 +0200
Subject: [PATCH 5/6] libvirtaio: keep track of the current implementation
Organization: Invisible Things Lab
Cc: Wojtek Porczyk <woju@invisiblethingslab.com>

Since 7534c19 it is not possible to register event implementation twice.
Instead, allow for retrieving the current one, should it be needed
afterwards.

Signed-off-by: Wojtek Porczyk <woju@invisiblethingslab.com>
---
 libvirtaio.py | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/libvirtaio.py b/libvirtaio.py
index 9ac0201..f3550a1 100644
--- a/libvirtaio.py
+++ b/libvirtaio.py
@@ -30,7 +30,11 @@ Register the implementation of default loop:
 
 __author__ = 'Wojtek Porczyk <woju@invisiblethingslab.com>'
 __license__ = 'LGPL-2.1+'
-__all__ = ['virEventAsyncIOImpl', 'virEventRegisterAsyncIOImpl']
+__all__ = [
+    'getCurrentImpl',
+    'virEventAsyncIOImpl',
+    'virEventRegisterAsyncIOImpl',
+]
 
 import asyncio
 import itertools
@@ -397,10 +401,18 @@ class virEventAsyncIOImpl(object):
         callback = self.callbacks.pop(timer)
         callback.close()
 
+
+_current_impl = None
+def getCurrentImpl():
+    '''Return the current implementation, or None if not yet registered'''
+    return _current_impl
+
 def virEventRegisterAsyncIOImpl(loop=None):
     '''Arrange for libvirt's callbacks to be dispatched via asyncio event loop
 
     The implementation object is returned, but in normal usage it can safely be
     discarded.
     '''
-    return virEventAsyncIOImpl(loop=loop).register()
+    global _current_impl
+    _current_impl = virEventAsyncIOImpl(loop=loop).register()
+    return _current_impl
-- 
2.9.4

